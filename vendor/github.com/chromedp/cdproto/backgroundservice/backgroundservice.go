// Package backgroundservice provides the Chrome DevTools Protocol
// commands, types, and events for the BackgroundService domain.
//
// Defines events for background web platform features.
//
// Generated by the cdproto-gen command.
package backgroundservice

// Code generated by cdproto-gen. DO NOT EDIT.

import (
	"context"

	"github.com/chromedp/cdproto/cdp"
)

// EnableParams [no description].
type EnableParams struct {
	Service ServiceName `json:"service"`
}

// Enable [no description].
//
// parameters:
//   service
func Enable(service ServiceName) *EnableParams {
	return &EnableParams{
		Service: service,
	}
}

// Do executes BackgroundService.enable against the provided context.
func (p *EnableParams) Do(ctxt context.Context, h cdp.Executor) (err error) {
	return h.Execute(ctxt, CommandEnable, p, nil)
}

// DisableParams [no description].
type DisableParams struct {
	Service ServiceName `json:"service"`
}

// Disable [no description].
//
// parameters:
//   service
func Disable(service ServiceName) *DisableParams {
	return &DisableParams{
		Service: service,
	}
}

// Do executes BackgroundService.disable against the provided context.
func (p *DisableParams) Do(ctxt context.Context, h cdp.Executor) (err error) {
	return h.Execute(ctxt, CommandDisable, p, nil)
}

// SetRecordingParams set the recording state for the service.
type SetRecordingParams struct {
	ShouldRecord bool        `json:"shouldRecord"`
	Service      ServiceName `json:"service"`
}

// SetRecording set the recording state for the service.
//
// parameters:
//   shouldRecord
//   service
func SetRecording(shouldRecord bool, service ServiceName) *SetRecordingParams {
	return &SetRecordingParams{
		ShouldRecord: shouldRecord,
		Service:      service,
	}
}

// Do executes BackgroundService.setRecording against the provided context.
func (p *SetRecordingParams) Do(ctxt context.Context, h cdp.Executor) (err error) {
	return h.Execute(ctxt, CommandSetRecording, p, nil)
}

// Command names.
const (
	CommandEnable       = "BackgroundService.enable"
	CommandDisable      = "BackgroundService.disable"
	CommandSetRecording = "BackgroundService.setRecording"
)
